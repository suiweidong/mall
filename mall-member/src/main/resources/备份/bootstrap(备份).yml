server:
  port: 8000

# 数据源配置
spring:
  datasource:
    url: jdbc:mysql://81.69.6.206:3306/dggmall_ums?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: youis218945
  # 配置nacos
  application:
    name: mall-member
  cloud:
    nacos:
      discovery:  #  启动类加 @EnableDiscoveryClient  开启服务的注册与发现
        # 配置Nacos地址
        # server-addr: http://106.15.238.69:8848/
        # 配置nginx地址
        server-addr: http://81.69.6.206:1122/
        # 服务分组
        group: dev
        # 服务命名空间
        namespace: 9d046e2a-8801-456a-81fd-1b8687fac2cf
      config:  # 配置中心配置
        # 配置中心地址
        # server-addr: http://106.15.238.69:8848
        # 配置nginx地址
        server-addr: http://81.69.6.206:1122
        # 指定yaml格式的配置
        file-extension: yaml
        # config分组
        group: dev
        # config命名空间
        namespace: 9d046e2a-8801-456a-81fd-1b8687fac2cf

# mybatis-plus配置
mybatis-plus:
  # mapper.xml 扫描
  mapper-locations: classpath*:/mapper/**/*.xml
  # 配置主键自增
  global-config:
    db-config:
      id-type: auto
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl